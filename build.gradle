buildscript {
  ext {
    kotlinVersion = "1.3.31"
    arrowVersion = "0.9.0"
    http4kVersion = "3.113.0"
    kotlintestVersion = "3.3.0"
    bintrayVersion = "1.8.4"
    csvVersion = "1.5"
  }

  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayVersion"
  }
}

apply plugin: "kotlin"
apply plugin: "java-gradle-plugin"
apply plugin: "com.jfrog.bintray"
apply plugin: "maven-publish"

repositories {
  maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
  mavenCentral()
}

apply from: rootProject.file("gradle/gradle-mvn-push.gradle")

test {
  useJUnitPlatform()
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

  implementation "io.arrow-kt:arrow-core-data:$arrowVersion"
  implementation "io.arrow-kt:arrow-core-extensions:$arrowVersion"
  implementation "io.arrow-kt:arrow-syntax:$arrowVersion"
  implementation "io.arrow-kt:arrow-typeclasses:$arrowVersion"
  implementation "io.arrow-kt:arrow-extras-data:$arrowVersion"
  implementation "io.arrow-kt:arrow-extras-extensions:$arrowVersion"
  implementation "io.arrow-kt:arrow-effects-data:$arrowVersion"
  implementation "io.arrow-kt:arrow-effects-extensions:$arrowVersion"
  implementation "io.arrow-kt:arrow-effects-io-extensions:$arrowVersion"
  implementation "io.arrow-kt:arrow-generic:$arrowVersion"

  implementation "org.http4k:http4k-core:$http4kVersion"
  implementation "org.http4k:http4k-client-okhttp:$http4kVersion"
  implementation "org.http4k:http4k-format-jackson:$http4kVersion"

  implementation "org.apache.commons:commons-csv:$csvVersion"
  testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintestVersion"
  testImplementation "io.kotlintest:kotlintest-assertions-arrow:$kotlintestVersion"

}

sourceSets {
  main.java.srcDirs += "src/main/kotlin"
  test.java.srcDirs += "src/test/kotlin"
}

gradlePlugin {
  plugins {
    hood {
      id = "com.47deg.hood"
      implementationClass = "com.fortysevendeg.hood.HoodPlugin"
    }
  }
}

def findPropertyOrEnv(String key) {
  [project.properties[key], System.getenv(key)].find { it != null }
}

bintray {
  publish = true
  user = findPropertyOrEnv("BINTRAY_USER") ?: "no.bintray.user"
  key = findPropertyOrEnv("BINTRAY_API_KEY") ?: "no.bintray.api.key"
  publications = ["MyPublication"]
  configurations = ["archives"]
  pkg {
    repo = "hood"
    name = project.name
    userOrg = POM_DEVELOPER_ID
    licenses = ["Apache-2.0"]
    vcsUrl = "https://github.com/47deg/hood.git"
  }
}

