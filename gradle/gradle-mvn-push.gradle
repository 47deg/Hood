def findPropertyOrEnv(String key) {
  [project.properties[key], System.getenv(key)].find { it != null }
}

publishing {
  publications {
    HoodPublication(MavenPublication) {

      artifactId = POM_ARTIFACT_ID
      groupId = group
      version = version

      artifact sourcesJar
      artifact javadocJar

      from components.java
      pom {
        name = POM_NAME
        packaging = POM_PACKAGING
        description = POM_DESCRIPTION
        url = POM_URL
        scm {
          url = POM_SCM_URL
          connection = POM_SCM_CONNECTION
          developerConnection = POM_SCM_DEV_CONNECTION
        }
        licenses {
          license {
            name = POM_LICENCE_NAME
            url = POM_LICENCE_URL
            distribution = POM_LICENCE_DIST
          }
        }
        developers {
          developer {
            id = POM_DEVELOPER_ID
            name = POM_DEVELOPER_NAME
          }
        }
      }
    }
  }
  repositories {
    maven {
      credentials {
          username findPropertyOrEnv("BINTRAY_USER") ?: "no.bintray.user"
          password findPropertyOrEnv("BINTRAY_API_KEY") ?: "no.bintray.api.key"
      }
      url = findProperty("SNAPSHOT_REPOSITORY_URL") ?: "https://oss.jfrog.org/artifactory/oss-snapshot-local"
    }
  }
}

if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption("Xdoclint:none", "-quiet")
    }
  }
}
